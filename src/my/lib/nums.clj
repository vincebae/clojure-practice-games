(ns my.lib.nums)

(def f float)
(def d double)

(defmacro f+ [& xs] `(float (+ ~@xs)))
(defmacro f- [& xs] `(float (- ~@xs)))
(defmacro f* [& xs] `(float (* ~@xs)))
(defmacro fdiv [& xs] `(float (/ ~@xs)))

(defmacro d+ [& xs] `(double (+ ~@xs)))
(defmacro d- [& xs] `(double (- ~@xs)))
(defmacro d* [& xs] `(double (* ~@xs)))
(defmacro ddiv [& xs] `(double (/ ~@xs)))

(def f0 (float 0))
(def f1 (float 1))
(def f2 (float 2))
(def f3 (float 3))
(def f4 (float 4))
(def f5 (float 5))
(def f6 (float 6))
(def f7 (float 7))
(def f8 (float 8))
(def f9 (float 9))

(def d0 (double 0))
(def d1 (double 1))
(def d2 (double 2))
(def d3 (double 3))
(def d4 (double 4))
(def d5 (double 5))
(def d6 (double 6))
(def d7 (double 7))
(def d8 (double 8))
(def d9 (double 9))
